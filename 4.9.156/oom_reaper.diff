diff --git a/include/linux/sched.h b/include/linux/sched.h
index a0ee4b6c6318..7228065cc19e 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -637,6 +637,7 @@ static inline int get_dumpable(struct mm_struct *mm)
 #define MMF_UNSTABLE		22	/* mm is unstable for copy_from_user */
 #define MMF_HUGE_ZERO_PAGE	23      /* mm has ever used the global huge zero page */
 #define MMF_OOM_VICTIM		25      /* mm is the oom victim */
+#define MMF_OOM_REAP_QUEUED	26	/* mm was queued for oom_reaper */
 
 #define MMF_INIT_MASK		(MMF_DUMPABLE_MASK | MMF_DUMP_FILTER_MASK)
 
diff --git a/mm/oom_kill.c b/mm/oom_kill.c
index 6acb0f6e610a..4dedaf298290 100644
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@ -618,8 +618,8 @@ void wake_oom_reaper(struct task_struct *tsk)
 	 * the same task by both OOM killer and LMK.
 	 */
 	spin_lock(&oom_reaper_lock);
-	/* tsk is already queued? */
-	if (tsk == oom_reaper_list || tsk->oom_reaper_list) {
+	/* mm is already queued? */
+	if (test_and_set_bit(MMF_OOM_REAP_QUEUED, &tsk->signal->oom_mm->flags)) {
 		spin_unlock(&oom_reaper_lock);
 		return;
 	}
