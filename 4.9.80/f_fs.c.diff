diff --git a/drivers/usb/gadget/function/f_fs.c b/drivers/usb/gadget/function/f_fs.c
index 866c3ec546bc..4a1bdbec1537 100644
--- a/drivers/usb/gadget/function/f_fs.c
+++ b/drivers/usb/gadget/function/f_fs.c
@@ -4315,18 +4315,15 @@ static void ffs_closed(struct ffs_data *ffs)
 {
 	struct ffs_dev *ffs_obj;
 	struct f_fs_opts *opts;
+	struct config_item *ci;
 
 	ENTER();
-
 	ffs_log("enter");
-
 	ffs_dev_lock();
 
 	ffs_obj = ffs->private_data;
-	if (!ffs_obj) {
-		ffs_dev_unlock();
+	if (!ffs_obj)
 		goto done;
-	}
 
 	ffs_obj->desc_ready = false;
 	ffs_obj->ffs_data = NULL;
@@ -4335,29 +4332,25 @@ static void ffs_closed(struct ffs_data *ffs)
 	    ffs_obj->ffs_closed_callback)
 		ffs_obj->ffs_closed_callback(ffs);
 
-	if (ffs_obj->opts) {
+	if (ffs_obj->opts)
 		opts = ffs_obj->opts;
-	} else {
-		ffs_dev_unlock();
+	else
 		goto done;
-	}
 
 	/* to get updated refcount atomic variable value */
 	smp_mb__before_atomic();
 	if (opts->no_configfs || !opts->func_inst.group.cg_item.ci_parent
-	    || !atomic_read(&opts->func_inst.group.cg_item.ci_kref.refcount)) {
-		ffs_dev_unlock();
+	    || !atomic_read(&opts->func_inst.group.cg_item.ci_kref.refcount))
 		goto done;
-	}
 
+	ci = opts->func_inst.group.cg_item.ci_parent->ci_parent;
 	ffs_dev_unlock();
 
-	if (test_bit(FFS_FL_BOUND, &ffs->flags)) {
-		unregister_gadget_item(opts->
-			       func_inst.group.cg_item.ci_parent->ci_parent);
-		ffs_log("unreg gadget done");
-	}
+	if (test_bit(FFS_FL_BOUND, &ffs->flags))
+		unregister_gadget_item(ci);
+	return;
 done:
+	ffs_dev_unlock();
 	ffs_log("exit");
 }
 
